@page "/"
@using ServiceBusTool.ServiceBus.ViewModels

@inject IndexViewModel Model

@if (Model.Connections is not null)
{
    <h2>Connection</h2>
    <select id="connectionSelect" class="col-sm-4" @onchange="args => Model.SelectConnectionAsync(args.Value)">
        <option value=""></option>
        @foreach (var connection in Model.Connections)
        {
            <option value="@connection.Id">@connection.Name</option>
        }
    </select>

    @if (Model.SelectedConnection is not null)
    {
        <div class="row">
            <div class="col-sm-4">
                <h2>Queue</h2>
                <select id="queueSelect" class="col-sm-12" @onchange="args => Model.SelectQueueName(args.Value)">
                    <option value=""></option>
                    @foreach (var queueName in Model.QueueNames)
                    {
                        <option value="@queueName">@queueName</option>
                    }
                </select>
            </div>
            @if (Model.MessageDefinitions is not null)
            {
                <div class="col-sm-4">
                    <h2>Message Definition</h2>
                    <select id="messagedefinitionselect" class="col-sm-12" @onchange="args => Model.SelectMessageDefinition(args.Value)">
                        <option value=""></option>
                        @foreach (var messageDefinition in Model.MessageDefinitions)
                        {
                            <option value="@messageDefinition.Id">@messageDefinition.Name</option>
                        }
                    </select>
                </div>
            }
        </div>

        @if (Model.SelectedQueueName is not null)
        {
            <h2>Message</h2>
            <EditForm Model="Model.SelectedMessage" OnSubmit="Model.SendMessage">
                <InputTextArea class="col-sm-12" rows="6" @bind-Value="Model.SelectedMessage.Body" @oninput="args => Model.OnMessageChanged(args.Value)"></InputTextArea>
                <label for="parameterList">Message parameters</label>
                <ul id="parameterList">
                    @foreach (var parameter in Model.MessageParameters)
                    {
                        <li>
                            <label for="@parameter.Name">@parameter.Name</label>
                            <InputText id="@parameter.Name" @bind-Value="parameter.Value" placeholder="@parameter.Name" ></InputText>
                        </li>
                    }
                </ul>
            <button type="submit">Send</button>
        </EditForm>
        }
    }
}

@code{
    protected override async Task OnInitializedAsync()
    {
        await Model.OnInitializedAsync();
    }
}