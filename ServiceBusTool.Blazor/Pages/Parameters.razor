@page "/parameters"
@using ServiceBusTool.ServiceBus.ViewModels

@inject ParametersViewModel Model

<h1>Parameter definitions</h1>

<div id="parameterdefinitinlist" class="list">
    @foreach (var parameterDefinition in Model.ParameterDefinitions)
    {
        <div class="parameterdefinition listitem" @onclick="() => Model.SelectParameterDefinition(parameterDefinition)">
            @parameterDefinition.Name
        </div>
    }
    <button class="btn btn-info" @onclick="Model.AddParameterDefinition">Add parameter definition</button>
</div>

<div id="parameterdefinitiondetails" class="details">
    @if (Model.SelectedParameterDefinition is not null)
    {
        <EditForm Model="@Model.SelectedParameterDefinition" OnValidSubmit="Model.OnSave">
            <DataAnnotationsValidator />

            <h2>Edit Parameter definition</h2>
            <hr />
            <div class="form-group row">
                <label for="parameterDefinitionName" class="col-sm-2 col-form-label">Parameter definition name</label>
                <div class="col-sm-10">
                    <InputText id="parameterDefinitionName" class="form-control" placeholder="Name" @bind-Value="Model.SelectedParameterDefinition.Name" />
                    <ValidationMessage For="() => Model.SelectedParameterDefinition.Name"></ValidationMessage>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label">Parameters</label>
                <p>Parameter names are case-insensitive.</p>
                <ValidationMessage For="() => Model.SelectedParameterDefinition.Parameters"></ValidationMessage>
                <table class="parametertable">
                    <tr>
                        <th>Parameter name</th>
                        <th>Parameter value</th>
                    </tr>
                    @foreach (var (parameter, index) in Model.SelectedParameterDefinition.Parameters.Select((p, i) => (p, i)))
                    {
                        <tr>
                            <td class="parametername col-sm-3">
                                <InputText id="parameterName" class="form-control" placeholder="Parameter Name" @bind-Value="parameter.Name"/>
                                @*<ValidationMessage For="() => parameter.Name"></ValidationMessage>*@
                            </td>
                            <td class="parametervalue col-sm-7">
                                <InputText id="parameterValue" class="form-control" placeholder="Parameter Value" @bind-Value="parameter.Value" />
                                @*<ValidationMessage For="() => parameter.Value"></ValidationMessage>*@
                            </td>
                            <td class="parameterbuttons col-sm-2">
                                <button type="button" class="btn btn-danger" @onclick="() => Model.DeleteParameter(index)">Delete</button>
                            </td>
                        </tr>
                    }
                </table>
            </div>
                <button type="button" class="btn btn-info" @onclick="Model.AddParameter">Add parameter</button>
            <button type="submit" class="btn btn-info">Save Parameter Definition</button>
            <button type="button" class="btn btn-danger" @onclick="Model.OnDelete">Delete Parameter Definition</button>
        </EditForm>
    }
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await Model.OnInitializedAsync();
    }
}