@page "/"

@if (Model.Connections is not null)
{
    <MudGrid Spacing="5">
        <MudItem xs="4">
            <MudCard>
                <MudCardHeader>
                    <MudText Typo="Typo.h5">Connection</MudText>
                </MudCardHeader>
                
                <MudCardContent>
                    <MudSelect T="Connection" ToStringFunc="c => c?.Name" @bind-Value="SelectedConnection">
                        @foreach (var connection in Model.Connections)
                        {
                            <MudSelectItem Value="connection"></MudSelectItem>
                        }
                    </MudSelect>
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="8"></MudItem>

        @if (Model.SelectedConnection is not null)
        {
            <MudItem xs="4">
                <MudCard>
                    <MudCardHeader>
                        <MudText Typo="Typo.h5">Queue</MudText>
                    </MudCardHeader>
                
                    <MudCardContent>
                        <MudSelect T="string" @bind-Value="Model.SelectedQueueName">
                            @foreach (var queueName in Model.QueueNames)
                            {
                                <MudSelectItem Value="queueName"></MudSelectItem>
                            }
                        </MudSelect>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            @if (Model.SelectedQueueName is not null)
            {
                <MudItem xs="4">
                    <MudCard>
                        <MudCardHeader>
                            <MudText Typo="Typo.h5">Message Definition</MudText>
                        </MudCardHeader>

                        <MudCardContent>
                            @if (Model.MessageDefinitions is not null)
                            {
                                <MudButtonGroup>
                                    <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown">
                                        @foreach (var messageDefinition in Model.MessageDefinitions)
                                        {
                                            <MudMenuItem OnClick="() => Model.SelectMessageDefinition(messageDefinition)">@messageDefinition.Name</MudMenuItem>
                                        }
                                    </MudMenu>
                                </MudButtonGroup>
                            }
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                <MudItem xs="4"></MudItem>

                <MudItem xs="12">
                    <EditForm Model="Model.SelectedMessage" OnSubmit="Model.SendMessageAsync">
                        <MudCard>
                            <MudCardHeader>
                                <MudText Typo="Typo.h5">Message</MudText>
                            </MudCardHeader>

                            <MudCardContent>
                                <MudTextField T="string" @bind-Value="Message" DebounceInterval="1000" />

                                <MudText Typo="Typo.h6">Message parameters</MudText>
                                @foreach (var parameter in Model.MessageParameters)
                                {
                                    <MudTextField T="string" HelperText="@parameter.Name" @bind-Value="@parameter.Value" For="() => parameter.Value" />
                                }
                            </MudCardContent>
                            
                            <MudCardActions>
                                <MudButton ButtonType="ButtonType.Submit">Send</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </EditForm>
                </MudItem>
            }
        }

    </MudGrid>
}